@page "/learnBlazor/bindprop"
@using global::LearnBlazor.Models

<div class="row">
    <div class="col-6 border p-3">
        isActive: <input type="checkbox" @bind="@Product.IsActive"/>
        <br/>

        <p>Product Properties</p>
        <select @bind="selectedProp">
            @foreach (var prop in Product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Value</option>
            }
        </select>
        <br/>
        Input Price: <input type="number" @bind="@Product.Price" @bind:event="oninput"/>
        
    </div>
    <div class="col-6 border p-3">
        Name: @Product.Name
        <br/>
        isActive : @Product.IsActive
        <br/>
        price: @Product.Price
        <br/>
        
        <br/>
        This Product is: @(Product.IsActive
                             ? "Active"
                             : "InActive")
        <br/>
        selected Prop: @selectedProp
    </div>
    <div class="col-12 mt-4">
        <h2 class="text-success-emphasis">Product Table</h2>
        <table class="table">
            <thead>
            <tr>
                <th scope="col">Product Name</th>
                <th scope="col">Price</th>
                <th scope="col">IsActive</th>
            </tr>
            </thead>
            <tbody>

            @foreach (var item in ProductList)
            {
                <tr>
                    <td><input type="text" @bind="@item.Name" @bind:event="oninput"/></td>
                    <td><input type="number" @bind="@item.Price" @bind:event="oninput"/></td>
                    <td><input type="checkbox" @bind="@item.IsActive"/></td>
                </tr>
            }

            </tbody>
        </table>
    </div>
    <div class="col-12 mt-4">
        <h2 class="text-success-emphasis">Product Summary</h2>
        @foreach(var item in ProductList)
        {
            <p>@item.Name [@item.Price] is @(item.IsActive ? "Active": "InActive")</p>
        }
        
    </div>

</div>


@if (!string.IsNullOrEmpty(selectedProp))
{
    <p>selected Key : @Product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
}

@code {
    private string selectedProp = "";

    Models.Product Product = new()
    {
        Id = 1,
        Name = "Product 1",
        IsActive = true,
        Price = 5,
        ProductProperties = new List<Models.Product_Prop>()
        {
            new Models.Product_Prop()
            {
                Id = 1,
                Key = "Color",
                Value = "Red"
            },
            new Models.Product_Prop()
            {
                Id = 2,
                Key = "Size",
                Value = "20oz"
            },
            new Models.Product_Prop()
            {
                Id = 1,
                Key = "Flavour",
                Value = "Rose"
            }
        }
    };

    List<Product> ProductList = new();

    protected override void OnInitialized()
    {
        ProductList.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 5.99,
            ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
            }
        });

        ProductList.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price=10.59,
            ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                new Product_Prop {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }

}